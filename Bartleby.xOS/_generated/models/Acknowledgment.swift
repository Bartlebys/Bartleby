//
//  Acknowledgment.swift
//  Bartleby
//
// THIS FILE AS BEEN GENERATED BY BARTLEBYFLEXIONS for [Benoit Pereira da Silva] (https://pereira-da-silva.com/contact)
// DO NOT MODIFY THIS FILE YOUR MODIFICATIONS WOULD BE ERASED ON NEXT GENERATION!
//
// Copyright (c) 2016  [Bartleby's org] (https://bartlebys.org)   All rights reserved.
//
import Foundation
#if !USE_EMBEDDED_MODULES
	import Alamofire
	import ObjectMapper
#endif

// MARK: Bartleby's Core: an object used to Acknowledge a Trigger
@objc(Acknowledgment) open class Acknowledgment : Metrics {


	//The trigger index
	dynamic open var triggerIndex:Int = -1

	//The subjects UIDS
	dynamic open var uids:[String] = [String]()

	//The triggerRelayDuration is computed server side it integrates the semaphore impact. (it can be used for QOS computation)
	dynamic open var triggerRelayDuration:Double = 0


    // MARK: - Mappable

    required public init?(map: Map) {
        super.init(map:map)
    }

    override open func mapping(map: Map) {
        super.mapping(map: map)
        self.quietChanges {
			self.triggerIndex <- ( map["triggerIndex"] )
			self.uids <- ( map["uids"] )
			self.triggerRelayDuration <- ( map["triggerRelayDuration"] )
        }
    }


    // MARK: - NSSecureCoding

    required public init?(coder decoder: NSCoder) {
        super.init(coder: decoder)
        self.quietChanges {
			self.triggerIndex=decoder.decodeInteger(forKey:"triggerIndex") 
			self.uids=decoder.decodeObject(of: [NSArray.classForCoder(),NSString.self], forKey: "uids")! as! [String]
			self.triggerRelayDuration=decoder.decodeDouble(forKey:"triggerRelayDuration") 
        }
    }

    override open func encode(with coder: NSCoder) {
        super.encode(with:coder)
		coder.encode(self.triggerIndex,forKey:"triggerIndex")
		coder.encode(self.uids,forKey:"uids")
		coder.encode(self.triggerRelayDuration,forKey:"triggerRelayDuration")
    }

    override open class var supportsSecureCoding:Bool{
        return true
    }

     required public init() {
        super.init()
    }
}