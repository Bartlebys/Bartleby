//
//  Container.swift
//  Bartleby
//
// THIS FILE AS BEEN GENERATED BY BARTLEBYFLEXIONS for [Benoit Pereira da Silva] (https://pereira-da-silva.com/contact)
// DO NOT MODIFY THIS FILE YOUR MODIFICATIONS WOULD BE ERASED ON NEXT GENERATION!
//
// Copyright (c) 2016  [Bartleby's org] (https://bartlebys.org)   All rights reserved.
//
import Foundation
#if !USE_EMBEDDED_MODULES
	import Alamofire
	import ObjectMapper
#endif

// MARK: Bartleby's Synchronized File System: A container to store Boxes,Nodes,Blocks
@objc(Container) open class Container : UnManagedModel {


	//You can setup a password
	dynamic open var password:String?

	//Boxes
	dynamic open var boxes:[Box] = [Box]()

	//Nodes
	dynamic open var nodes:[Node] = [Node]()

	//Blocks
	dynamic open var blocks:[Block] = [Block]()


    // MARK: - Mappable

    required public init?(map: Map) {
        super.init(map:map)
    }

    override open func mapping(map: Map) {
        super.mapping(map: map)
        self.quietChanges {
			self.password <- ( map["password"] )
			self.boxes <- ( map["boxes"] )
			self.nodes <- ( map["nodes"] )
			self.blocks <- ( map["blocks"] )
        }
    }

     required public init() {
        super.init()
    }
}