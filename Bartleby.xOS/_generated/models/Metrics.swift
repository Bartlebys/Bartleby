//
//  Metrics.swift
//  Bartleby
//
// THIS FILE AS BEEN GENERATED BY BARTLEBYFLEXIONS for [Benoit Pereira da Silva] (https://pereira-da-silva.com/contact)
// DO NOT MODIFY THIS FILE YOUR MODIFICATIONS WOULD BE ERASED ON NEXT GENERATION!
//
// Copyright (c) 2016  [Bartleby's org] (https://bartlebys.org)   All rights reserved.
//
import Foundation
#if !USE_EMBEDDED_MODULES
	import Alamofire
	import ObjectMapper
#endif

// MARK: Bartleby's Core: a value object used to record metrics
@objc(Metrics) open class Metrics : UnManagedModel {


	//The referent document
	dynamic open var referentDocument:BartlebyDocument?

	//The action name e.g: UpdateUser
	dynamic open var operationName:String = "\(Default.NO_NAME)"

	//The metrics entry counter
	dynamic open var counter:Int = -1

	//The elasped time since app started up.
	dynamic open var elapsed:Double = 0

	//The time interval in seconds from the time the request started to the initial response from the server.
	dynamic open var latency:Double = 0

	//The time interval in seconds from the time the request started to the time the request completed.
	dynamic open var requestDuration:Double = 0

	// The time interval in seconds from the time the request completed to the time response serialization completed.
	dynamic open var serializationDuration:Double = 0

	//The time interval in seconds from the time the request started to the time response serialization completed.
	dynamic open var totalDuration:Double = 0

	//The full http context
	dynamic open var httpContext:HTTPContext?

	//the verification method
	public enum StreamOrientation:String{
		case upStream = "upStream"
		case downStream = "downStream"
	}
	open var streamOrientation:StreamOrientation = .upStream


    // MARK: - Mappable

    required public init?(map: Map) {
        super.init(map:map)
    }

    override open func mapping(map: Map) {
        super.mapping(map: map)
        self.quietChanges {
			self.operationName <- ( map["operationName"] )
			self.counter <- ( map["counter"] )
			self.elapsed <- ( map["elapsed"] )
			self.latency <- ( map["latency"] )
			self.requestDuration <- ( map["requestDuration"] )
			self.serializationDuration <- ( map["serializationDuration"] )
			self.totalDuration <- ( map["totalDuration"] )
			self.httpContext <- ( map["httpContext"] )
			self.streamOrientation <- ( map["streamOrientation"] )
        }
    }

     required public init() {
        super.init()
    }
}