//
//  StringVO.swift
//  Bartleby
//
// THIS FILE AS BEEN GENERATED BY BARTLEBYFLEXIONS for [Benoit Pereira da Silva] (https://pereira-da-silva.com/contact)
// DO NOT MODIFY THIS FILE YOUR MODIFICATIONS WOULD BE ERASED ON NEXT GENERATION!
//
// Copyright (c) 2016  [Bartleby's org] (https://bartlebys.org)   All rights reserved.
//
import Foundation
#if !USE_EMBEDDED_MODULES
	import Alamofire
	import ObjectMapper
#endif

// MARK: A simple String ValueObject
@objc(StringVO) open class StringVO : NSObject, Mappable, NSSecureCoding {


	//The value
	dynamic open var value:String = ""


    // MARK: - Mappable

    required public init?(map: Map) {
        
    }

     open func mapping(map: Map) {
        
        self.quietChanges {
			self.value <- ( map["value"] )
        }
    }


    // MARK: - NSSecureCoding

    required public init?(coder decoder: NSCoder) {
        super.init()
        self.quietChanges {
			self.value=String(describing: decoder.decodeObject(of: NSString.self, forKey: "value")! as NSString)
        }
    }

     open func encode(with coder: NSCoder) {
        
		coder.encode(self.value,forKey:"value")
    }

     open class var supportsSecureCoding:Bool{
        return true
    }

    override required public init() {
        super.init()
    }

    // TODO to be removed
    public func quietChanges(_ changes:()->()){
    }
}