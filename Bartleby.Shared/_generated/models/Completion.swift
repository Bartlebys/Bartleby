//
//  Completion.swift
//  Bartleby
//
// THIS FILE AS BEEN GENERATED BY BARTLEBYFLEXIONS for benoit@pereira-da-silva.com
// DO NOT MODIFY THIS FILE YOUR MODIFICATIONS WOULD BE ERASED ON NEXT GENERATION!
// WE TRY TO GENERATE ANY REPETITIVE CODE AND TO IMPROVE THE QUALITY ITERATIVELY
//
// Copyright (c) 2015  Chaosmos | https://chaosmos.fr  All rights reserved.
//
import Foundation
#if !USE_EMBEDDED_MODULES
import Alamofire
import ObjectMapper
#endif

// MARK: Model Completion
@objc(Completion) public class Completion : JObject{

    // Universal type support
    override public class func typeName() -> String {
        return "Completion"
    }

	//Success if set to true
	public var success:Bool = true
	//The status
	public var statusCode:Int = CompletionStatus.Undefined.rawValue
	//The Message
	public var message:String = ""
	//completion data
	public var data:NSData?


    // MARK: Mappable

    required public init?(_ map: Map) {
        super.init(map)
        mapping(map)
    }

    override public func mapping(map: Map) {
        super.mapping(map)
		self.success <- map["success"]
		self.statusCode <- map["statusCode"]
		self.message <- map["message"]
		self.data <- (map["data"],Base64DataTransform())
    }


    // MARK: NSSecureCoding

    required public init?(coder decoder: NSCoder) {
        super.init(coder: decoder)
		self.success=decoder.decodeBoolForKey("success") 
		self.statusCode=decoder.decodeIntegerForKey("statusCode") 
		self.message=String(decoder.decodeObjectOfClass(NSString.self, forKey: "message")! as NSString)
		self.data=decoder.decodeObjectOfClass(NSData.self, forKey:"data") as NSData?

    }

    override public func encodeWithCoder(coder: NSCoder) {
        super.encodeWithCoder(coder)
		coder.encodeBool(self.success,forKey:"success")
		coder.encodeInteger(self.statusCode,forKey:"statusCode")
		coder.encodeObject(self.message,forKey:"message")
		if let data = self.data {
			coder.encodeObject(data,forKey:"data")
		}
    }


    override public class func supportsSecureCoding() -> Bool{
        return true
    }


    required public init() {
        super.init()
    }

    // MARK: Identifiable

    override public class var collectionName:String{
        return "completions"
    }

    override public var d_collectionName:String{
        return Completion.collectionName
    }


}

